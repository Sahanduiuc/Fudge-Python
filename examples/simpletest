#!/usr/bin/env python
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#
                
import cStringIO

from fudge.message import Message, Envelope
from fudge import registry     
          
MY_NAME = u"Some Random Person" 
  
def main(): 
    """A Simple example of how to use Fudge.
    
    This will help drive the API design."""
    
    FLOAT_TYPE = registry.DEFAULT_REGISTRY[registry.FLOAT_TYPE_ID]                                    
    BYTEARRAY_TYPE = registry.DEFAULT_REGISTRY[registry.BYTEARRAY_TYPE_ID]                                    
    
    m = Message()
     
    m.add(MY_NAME, name=u"name")
    m.add(19801231L, ordinal=4, name=u"dob" )
    m.add(10, ordinal=32, name=u"mark a")
    m.add(20, ordinal=33, name=u"mark b")
    m.add(30, ordinal=34,name=u"mark c")
    m.add(2.0, ordinal=64, name=u"average a", type_=FLOAT_TYPE)
    m.add(1.0, ordinal=65, name=u"average b", type_=FLOAT_TYPE) 
    m.add(str('\x00\x01\x02\x03\x04'), name=u"bar", type_=BYTEARRAY_TYPE)
    e = Envelope(m) 
    
    print "Message:"
    for f in m.fields:
        print "  %s"% f
    
    writer = cStringIO.StringIO()
    e.encode(writer)
    bytes = writer.getvalue()
    
    print "Encoded:"
    print "  %s"%repr(bytes)
    
    f = Envelope.decode(bytes)  
    print "Decoded:"
    print "  Directives : %d"%f.directives
    print "  Schema Version : %d"%f.schema_version
    print "  Taxonomy : %d"%f.taxonomy
    print "Message:"  
    for f in m.fields:
        print "  %s"%f
    
if __name__ == '__main__':
    main()

